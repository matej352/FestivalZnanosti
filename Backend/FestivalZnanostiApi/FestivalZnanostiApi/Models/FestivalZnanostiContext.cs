// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace FestivalZnanostiApi.Models;

public partial class FestivalZnanostiContext : DbContext
{
    public FestivalZnanostiContext()
    {
    }

    public FestivalZnanostiContext(DbContextOptions<FestivalZnanostiContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Account> Account { get; set; }

    public virtual DbSet<Event> Event { get; set; }

    public virtual DbSet<FestivalYear> FestivalYear { get; set; }

    public virtual DbSet<Lecturer> Lecturer { get; set; }

    public virtual DbSet<Location> Location { get; set; }

    public virtual DbSet<ParticipantsAge> ParticipantsAge { get; set; }

    public virtual DbSet<TimeSlot> TimeSlot { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Account>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Account__3214EC07D336F953");

            entity.HasIndex(e => e.Email, "UQ__Account__A9D10534E2C634B3").IsUnique();

            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.FirstName)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.LastName)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Password)
                .IsRequired()
                .IsUnicode(false);
            entity.Property(e => e.Salt)
                .IsRequired()
                .IsUnicode(false);
        });

        modelBuilder.Entity<Event>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Event__3214EC079093E635");

            entity.Property(e => e.Equipment)
                .IsRequired()
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.Summary)
                .IsRequired()
                .HasMaxLength(1800)
                .IsUnicode(false);
            entity.Property(e => e.Title)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.Type)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false);

            entity.HasOne(d => d.FestivalYear).WithMany(p => p.Event)
                .HasForeignKey(d => d.FestivalYearId)
                .HasConstraintName("FK__Event__FestivalY__32E0915F");

            entity.HasOne(d => d.Location).WithMany(p => p.Event)
                .HasForeignKey(d => d.LocationId)
                .HasConstraintName("FK__Event__LocationI__30F848ED");

            entity.HasOne(d => d.Submitter).WithMany(p => p.Event)
                .HasForeignKey(d => d.SubmitterId)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__Event__Submitter__31EC6D26");

            entity.HasMany(d => d.ParticipantsAge).WithMany(p => p.Event)
                .UsingEntity<Dictionary<string, object>>(
                    "ForAge",
                    r => r.HasOne<ParticipantsAge>().WithMany()
                        .HasForeignKey("ParticipantsAgeId")
                        .HasConstraintName("FK__ForAge__Particip__3C69FB99"),
                    l => l.HasOne<Event>().WithMany()
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK__ForAge__EventId__3B75D760"),
                    j =>
                    {
                        j.HasKey("EventId", "ParticipantsAgeId").HasName("PK__ForAge__F266F9B5FF183B3D");
                    });
        });

        modelBuilder.Entity<FestivalYear>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Festival__3214EC073066FDBF");

            entity.Property(e => e.Description)
                .IsRequired()
                .HasMaxLength(1000)
                .IsUnicode(false);
            entity.Property(e => e.EditUntil).HasColumnType("datetime");
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.StartDate).HasColumnType("datetime");
            entity.Property(e => e.Title)
                .IsRequired()
                .HasMaxLength(300)
                .IsUnicode(false);
            entity.Property(e => e.Topic)
                .IsRequired()
                .HasMaxLength(300)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Lecturer>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Lecturer__3214EC076127188A");

            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.FirstName)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.LastName)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Phone)
                .IsRequired()
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.Resume)
                .HasMaxLength(800)
                .IsUnicode(false);

            entity.HasOne(d => d.Event).WithMany(p => p.Lecturer)
                .HasForeignKey(d => d.EventId)
                .HasConstraintName("FK__Lecturer__EventI__38996AB5");
        });

        modelBuilder.Entity<Location>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Location__3214EC07BE027316");

            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false);

            entity.HasOne(d => d.ParentLocation).WithMany(p => p.InverseParentLocation)
                .HasForeignKey(d => d.ParentLocationId)
                .HasConstraintName("FK_ParentLocation");
        });

        modelBuilder.Entity<ParticipantsAge>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Particip__3214EC076DC94458");

            entity.Property(e => e.Age)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Label)
                .IsRequired()
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<TimeSlot>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__TimeSlot__3214EC07BC6D4FA4");

            entity.Property(e => e.Start).HasColumnType("datetime");

            entity.HasOne(d => d.Location).WithMany(p => p.TimeSlot)
                .HasForeignKey(d => d.LocationId)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__TimeSlot__Locati__35BCFE0A");

            entity.HasMany(d => d.Event).WithMany(p => p.TimeSlot)
                .UsingEntity<Dictionary<string, object>>(
                    "During",
                    r => r.HasOne<Event>().WithMany()
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__During__EventId__403A8C7D"),
                    l => l.HasOne<TimeSlot>().WithMany()
                        .HasForeignKey("TimeSlotId")
                        .HasConstraintName("FK__During__TimeSlot__3F466844"),
                    j =>
                    {
                        j.HasKey("TimeSlotId", "EventId").HasName("PK__During__565853B317A8335C");
                    });
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}